package components

import (
	"github.com/axzilla/templui/pkg/components"
	"github.com/axzilla/templui/pkg/icons"
)

templ themeSwitcherHandler() {
	{{ handle := templ.NewOnceHandle() }}
	@handle.Once() {
		<script nonce={ templ.GetNonce(ctx) }>
			document.addEventListener('alpine:init', () => {
				Alpine.data('themeSwitcherHandler', () => ({
					isDarkMode() {
						return this.isDark
					},
					isLightMode() {
						return !this.isDark
					}
				}))
			})
		</script>
	}
}

type ThemeSwitcherProps struct {
	Class string
}

templ ThemeSwitcher(props ThemeSwitcherProps) {
	@themeSwitcherHandler()
	@components.Button(components.ButtonProps{
		Size:     components.ButtonSizeIcon,
		Variant:  components.ButtonVariantGhost,
		IconLeft: templ.Component(DynamicThemeIcon()),
		Class:    props.Class,
		Attributes: templ.Attributes{
			"@click": "toggleTheme",
		},
	})
}

templ DynamicThemeIcon() {
	<div x-data="themeSwitcherHandler">
		<span x-show="isDarkMode" class="block">
			@LightIcon()
		</span>
		<span x-show="isLightMode" class="block">
			@DarkIcon()
		</span>
	</div>
}

templ DarkIcon() {
	@icons.Moon(icons.IconProps{})
}

templ LightIcon() {
	@icons.SunMedium(icons.IconProps{})
}