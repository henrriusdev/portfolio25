// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Navbar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<nav class=\"border-b py-3 bg-white dark:bg-gray-800\"><div class=\"container mx-auto px-4\"><div class=\"flex items-center justify-between\"><!-- Logo/Name --><div class=\"text-xl font-bold text-gray-800 dark:text-white\">Your Name</div><!-- Desktop Menu --><div class=\"hidden md:flex items-center space-x-4\"><a href=\"/\" class=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">Home</a> <a href=\"/about\" class=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">About</a> <a href=\"/projects\" class=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">Projects</a> <a href=\"/contact\" class=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">Contact</a>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ThemeSwitcher(ThemeSwitcherProps{}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><!-- Mobile Menu Button (usando Alpine.js) --><div class=\"md:hidden relative\" x-data=\"{ isOpen: false }\"><button @click=\"isOpen = !isOpen\" @click.away=\"isOpen = false\" class=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white focus:outline-none\"><svg class=\"h-6 w-6 transition-transform duration-200\" :class=\"{&#39;rotate-180&#39;: isOpen}\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\"></path></svg></button><!-- Mobile Menu Dropdown --><div x-show=\"isOpen\" x-transition:enter=\"transition ease-out duration-200\" x-transition:enter-start=\"opacity-0 transform scale-95\" x-transition:enter-end=\"opacity-100 transform scale-100\" x-transition:leave=\"transition ease-in duration-150\" x-transition:leave-start=\"opacity-100 transform scale-100\" x-transition:leave-end=\"opacity-0 transform scale-95\" class=\"absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5\" style=\"display: none;\"><div class=\"py-1 rounded-md bg-white dark:bg-gray-700 shadow-xs\"><a href=\"/\" class=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600\">Home</a> <a href=\"/about\" class=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600\">About</a> <a href=\"/projects\" class=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600\">Projects</a> <a href=\"/contact\" class=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600\">Contact</a><div class=\"px-4 py-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ThemeSwitcher(ThemeSwitcherProps{}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div></div></div></div></div></div></nav>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
