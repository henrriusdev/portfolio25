package components

import (
	"github.com/henrriusdev/portfolio/pkg/model"
	"github.com/henrriusdev/portfolio/src/components/button"
	"github.com/henrriusdev/portfolio/src/components/icon"
	"github.com/henrriusdev/portfolio/src/components/modal"
	"strconv"
	"time"
)

func getEndDate(date *time.Time) string {
	endDate := "Current"
	if date != nil {
		endDate = date.Format(time.DateOnly)
	}

	return endDate
}

templ ExperienceItem(experience model.Experience, internal bool) {
	<li class="mb-10 ml-4">
		<div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
		<time class="text-base mb-2 font-normal leading-none text-gray-400 dark:text-gray-500">
			{ experience.StartDate.Format(time.DateOnly) } - { getEndDate(experience.EndDate) }
		</time>
		<h3 class="text-2xl font-semibold text-gray-900 dark:text-white flex items-center gap-2 mb-2">
			@icon.BriefcaseBusiness(icon.Props{Size: 24, Class: "text-muted-foreground"})
			{ experience.Role }
		</h3>
		<p class="mb-2 font-normal text-gray-500 dark:text-gray-400 flex items-center gap-2 text-xl">
			@icon.Building2(icon.Props{Size: 24, Class: "text-muted-foreground"})
			{ experience.Company }
		</p>
		<p class="mb-4 text-lg font-normal text-gray-500 dark:text-gray-400 w-[70ch]">{ experience.Description }</p>
		if internal {
			@modal.Trigger(modal.TriggerProps{ModalID: "experience-form-modal-" + strconv.Itoa(int(experience.ID))}) {
				@button.Button(button.Props{Variant: button.VariantDefault}) {
					Edit
				}
			}
			@ExperienceModal("experience-form-modal-"+strconv.Itoa(int(experience.ID)), experience)
		}
	</li>
}

templ ExperienceTimeline(exps []model.Experience, internal bool) {
	<ol class="relative border-l-1 border-gray-200 dark:border-gray-700">
		for _, exp := range exps {
			@ExperienceItem(exp, internal)
		}
	</ol>
}
