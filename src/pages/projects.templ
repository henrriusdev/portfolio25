package pages

import (
	"github.com/henrriusdev/portfolio/pkg/model"
	"github.com/henrriusdev/portfolio/src/components"
	"github.com/henrriusdev/portfolio/src/layout"
	"github.com/henrriusdev/portfolio/src/components/modal"
	"github.com/henrriusdev/portfolio/src/components/input"
	"github.com/henrriusdev/portfolio/src/components/textarea"
	"github.com/henrriusdev/portfolio/src/components/button"
	"github.com/henrriusdev/portfolio/src/components/form"
	"github.com/henrriusdev/portfolio/src/components/selectbox"
)

templ Projects(techs []selectbox.Option, projects ...model.Project) {
	@layout.BaseInternal("Projects - HenrriusDev") {
		<div class="container mx-auto px-4 py-8">
			<div class="flex justify-between items-center mb-8">
				<h1 class="text-3xl font-bold text-gray-800 dark:text-white">
					Projects
				</h1>
				<div class="flex gap-4">
					@modal.Trigger(modal.TriggerProps{ModalID: "project-form-modal"}) {
						@button.Button(button.Props{
							Variant: button.VariantDefault,
						}) {
							Create Project
						}
					}
				</div>
			</div>
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
				if len(projects) == 0 {
					<p class="text-gray-600 dark:text-gray-400">
						No projects to show
					</p>
				} else {
					for _, project := range projects {
						@components.ProjectCard(project, true, techs...)
					}
				}
			</div>
		</div>
		@modal.Modal(modal.Props{ID: "project-form-modal", Class: "max-w-lg mx-auto"}) {
			@modal.Header() {
				<h3 class="text-xl font-bold">Project Form</h3>
			}
			@modal.Body() {
				<form id="projectForm" action="/dashboard/save-project" method="POST" class="space-y-4">
					@form.Item(form.ItemProps{Class: "mb-4"}) {
						@form.Label(form.LabelProps{
							For: "projectTitle",
						}){
							Title
						}
						@input.Input(input.Props{
							ID:          "projectTitle",
							Name:        "title",
							Placeholder: "Enter project title",
						})
					}
					@form.Item(form.ItemProps{Class: "mb-4"}) {
						@form.Label(form.LabelProps{
							For: "projectDescription",
						}) {
							Description
						}
						@textarea.Textarea(textarea.Props{
							ID:          "projectDescription",
							Name:        "description",
							Placeholder: "Enter project description",
						})
					}
					@form.Item(form.ItemProps{Class: "mb-4"}) {
						@form.Label(form.LabelProps{
							For: "projectTechs",
						}) {
							Technologies
						}
						<div class="flex flex-wrap gap-2">
							for _, tech := range techs {
								<label class="flex items-center gap-1 text-sm">
									<input
										type="checkbox"
										name="techs"
										value={ tech.Value }
										class="accent-primary"
									/>
									{ tech.Label }
								</label>
							}
						</div>
					}
					@form.Item(form.ItemProps{Class: "mb-4"}) {
						@form.Label(form.LabelProps{
							For: "projectImage",
						}) {
							Image URL
						}
						@input.Input(input.Props{
							ID:          "projectImage",
							Name:        "image_url",
							Placeholder: "Enter image URL",
						})
					}
					@form.Item(form.ItemProps{Class: "mb-4"}) {
						@form.Label(form.LabelProps{
							For: "projectLive",
						}) {
							Live URL
						}
						@input.Input(input.Props{
							ID:          "projectLive",
							Name:        "url",
							Placeholder: "Enter live URL",
						})
					}
					@form.Item(form.ItemProps{Class: "mb-4"}) {
						@form.Label(form.LabelProps{
							For: "projectRepo",
						}) {
							Repo URL
						}
						@input.Input(input.Props{
							ID:          "projectRepo",
							Name:        "repo",
							Placeholder: "Enter repository URL",
						})
					}
				</form>
			}
			@modal.Footer() {
				<div class="flex gap-2">
					@modal.Close(modal.CloseProps{ID: "project-form-modal"}) {
						@button.Button(button.Props{
							Variant: button.VariantDefault,
						}) {
							Cancel
						}
					}
					@button.Button(button.Props{
						Variant: button.VariantDefault,
						Type:    "submit",
						Attributes: templ.Attributes{
								"form": "projectForm",
						},
					}) {
						Save
					}
				</div>
			}
		}
	}
}
