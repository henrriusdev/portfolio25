package pages

import (
	"fmt"
	"github.com/henrriusdev/portfolio/pkg/model"
	"github.com/henrriusdev/portfolio/src/components/button"
	"github.com/henrriusdev/portfolio/src/components/editor"
	"github.com/henrriusdev/portfolio/src/components/input"
	"github.com/henrriusdev/portfolio/src/layout"
)

templ BlogEdit(post model.BlogPost, allCategories []model.Category) {
	@layout.BaseInternal("Create or Edit Post") {
		<div class="container mx-auto py-8">
			<div class="max-w-4xl mx-auto">
				<h1 class="text-4xl font-bold mb-8">
					if post.ID == 0 {
						Create Post
					} else {
						Edit Post
					}
				</h1>
				<form method="POST" action="/blog/save" class="space-y-6">
					<input type="hidden" name="id" value={ fmt.Sprint(post.ID) }/>
					<div class="space-y-2">
						<label for="title" class="text-sm font-medium">Title</label>
						@input.Input(input.Props{
							ID:          "title",
							Name:        "title",
							Value:       post.Title,
							Placeholder: "Enter post title",
						})
					</div>
					<div class="space-y-2">
						<label class="text-sm font-medium">Content</label>
						@editor.MarkdownEditor(editor.Props{
							Name:    "content",
							Content: post.Content,
						})
					</div>
					
					<!-- Categories -->
					<div class="space-y-2">
						<label class="text-sm font-medium">Categories</label>
						<div class="grid grid-cols-2 md:grid-cols-3 gap-3">
							for _, category := range allCategories {
								<div class="flex items-center">
									<input 
										type="checkbox" 
										id={ "category-" + fmt.Sprint(category.ID) } 
										name="categories" 
										value={ fmt.Sprint(category.ID) }
										class="mr-2 h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
										checked?={ IsCategorySelected(post.Categories, category.ID) }
									/>
									<label for={ "category-" + fmt.Sprint(category.ID) } class="text-sm text-gray-700 dark:text-gray-300">
										{ category.Name }
									</label>
								</div>
							}
						</div>
						<div class="mt-2">
							<a href="/categories" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">Manage categories</a>
						</div>
					</div>
					<div class="flex gap-4">
						<a href="/blog">
							@button.Button(button.Props{
								Variant: button.VariantOutline,
							}) {
								Cancel
							}
						</a>
						@button.Button(button.Props{
							Type: "submit",
						}) {
							if post.ID == 0 {
								Create Post
							} else {
								Update Post
							}
						}
					</div>
				</form>
			</div>
		</div>
	}
}
